@model DetailedTransactionReport

@{
    var amountSummary = new AmountSummaryViewModel()
    {
        Incomes = Model.TotalDeposit, 
        Expenses = Model.TotalWithdraw,
        Total = Model.TotalBalance
    };
    
}

<partial name="_MonthNavigator" model="@Model.StartDate"/>

<partial name="_AmountSummary" model="@amountSummary"/>

@if (Model.GroupedTransactions.Count() == 0)
{
    <h5>No hay datos para mostrar</h5>
}
else
{
    <table class="table table-striped">
        <tbody>
        @foreach (var groupedTransaction in Model.GroupedTransactions)
        {
            <tr style="background-color: lightblue; font-size: 26px;">
                <td colspan="3">@groupedTransaction.TransactionDate.Day
                    <span class="badge bg-secondary">@groupedTransaction.TransactionDate.ToString("ddd")</span>
                </td>
                <td class="asset">@groupedTransaction.DepositBalance.ToString("N")</td>
                <td class="liability">@groupedTransaction.WithdrawBalance.ToString("N")</td>
            </tr>
            @foreach (var transaction in groupedTransaction.Transactions)
            {
                <tr style="Vertical-align: middle;">
                    <td>
                        <a asp-controller="Transaction" asp-action="Edit" asp-route-id="@transaction.Id" asp-route-urlReturn="@ViewBag.urlReturn" class="btn btn-secondary btn-sm" >
                            <i class="bi-pencil"></i>
                        </a>
                    </td>
                    <td>@transaction.Category</td>
                    <td>@transaction.Account</td>
                    <td class="asset">@(transaction.OperationTypeId== OperationType.Ingreso? transaction.Amount.ToString("N") : null)</td>
                    <td class="liability">@(transaction.OperationTypeId== OperationType.Gasto? transaction.Amount.ToString("N") : null)</td>
                </tr>
            }
        }
        </tbody>
    </table>
}